{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nfunction RefrshHandler({\n  setIsAuthenticated,\n  setRole,\n  setSupplierProduct\n}) {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const role = localStorage.getItem('role');\n    const supplierProduct = localStorage.getItem('supplierProduct');\n    if (token && role && supplierProduct) {\n      var _allowedPaths$role, _allowedPaths$role$su, _allowedPaths$role2;\n      setIsAuthenticated(true);\n      setRole(role);\n      if (role === 'supplier' && supplierProduct) {\n        setSupplierProduct(supplierProduct);\n      }\n\n      // تعريف المسارات المسموحة لكل دور\n      const allowedPaths = {\n        supplier: {\n          cement: ['/cement/home'],\n          concret: ['/concret/home']\n        },\n        company: ['/company/home'],\n        admin: ['/admin/home']\n      };\n\n      // إذا لم يكن المسار الحالي من المسارات المسموحة للدور، يتم إعادة توجيه المستخدم إلى المسار المناسب\n      if (!((_allowedPaths$role = allowedPaths[role]) !== null && _allowedPaths$role !== void 0 && (_allowedPaths$role$su = _allowedPaths$role[supplierProduct]) !== null && _allowedPaths$role$su !== void 0 && _allowedPaths$role$su.includes(location.pathname)) && !((_allowedPaths$role2 = allowedPaths[role]) !== null && _allowedPaths$role2 !== void 0 && _allowedPaths$role2.includes(location.pathname))) {\n        if (role === 'supplier') {\n          navigate(`/${role}/${supplierProduct}/home`, {\n            replace: true\n          }); // إعادة التوجيه إلى الصفحة الرئيسية الخاصة بالدور والمنتج\n        } else {\n          navigate(`/${role}/home`, {\n            replace: true\n          }); // إعادة التوجيه إلى الصفحة الرئيسية الخاصة بالدور\n        }\n        //  عندما تريد استبدال الصفحة الحالية وعدم السماح بالعودة إليها replace: true استخدم.\n        // عندما تريد إضافة الصفحة الجديدة إلى السجل وتمكين العودة للصفحة السابق replace: false استخدم \n      }\n    } else {\n      setIsAuthenticated(false);\n      setRole(null);\n      setSupplierProduct(null);\n      // إذا لم يتم تسجيل الدخول، نقوم بتوجيه المستخدم إلى صفحة تسجيل الدخول\n      if (!['/supplier-login', '/company-login', '/admin', '/supplier-registration', '/company-registration'].includes(location.pathname)) {\n        navigate('/supplier-login', {\n          replace: false\n        }); // تحويل المستخدم إلى صفحة تسجيل الدخول الخاصة بـ supplier\n      }\n    }\n  }, [location, navigate, setIsAuthenticated, setRole, setSupplierProduct]);\n  return null; // هذا المكون لا يعرض شيئًا\n}\n_s(RefrshHandler, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = RefrshHandler;\nexport default RefrshHandler;\nvar _c;\n$RefreshReg$(_c, \"RefrshHandler\");","map":{"version":3,"names":["useEffect","useLocation","useNavigate","RefrshHandler","setIsAuthenticated","setRole","setSupplierProduct","_s","location","navigate","token","localStorage","getItem","role","supplierProduct","_allowedPaths$role","_allowedPaths$role$su","_allowedPaths$role2","allowedPaths","supplier","cement","concret","company","admin","includes","pathname","replace","_c","$RefreshReg$"],"sources":["D:/A.L/مواد جامعة/Project/Project(A)/Code/login-admin/frontend/src/routes/RefrshHandler.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction RefrshHandler({ setIsAuthenticated, setRole, setSupplierProduct }) {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n    const supplierProduct = localStorage.getItem('supplierProduct');\r\n\r\n    if (token && role && supplierProduct) {\r\n      setIsAuthenticated(true);\r\n      setRole(role);\r\n      if (role === 'supplier' && supplierProduct) {\r\n        setSupplierProduct(supplierProduct);\r\n      }\r\n\r\n\r\n      // تعريف المسارات المسموحة لكل دور\r\n      const allowedPaths = {\r\n        supplier: {cement: ['/cement/home'],concret:['/concret/home']},\r\n        company: ['/company/home'],\r\n        admin: ['/admin/home'],\r\n      };\r\n\r\n      // إذا لم يكن المسار الحالي من المسارات المسموحة للدور، يتم إعادة توجيه المستخدم إلى المسار المناسب\r\n      if (!allowedPaths[role]?.[supplierProduct]?.includes(location.pathname) && !allowedPaths[role]?.includes(location.pathname)) {\r\n        if (role === 'supplier') {\r\n          navigate(`/${role}/${supplierProduct}/home`, { replace: true }); // إعادة التوجيه إلى الصفحة الرئيسية الخاصة بالدور والمنتج\r\n        } else {\r\n          navigate(`/${role}/home`, { replace: true }); // إعادة التوجيه إلى الصفحة الرئيسية الخاصة بالدور\r\n        }\r\n      //  عندما تريد استبدال الصفحة الحالية وعدم السماح بالعودة إليها replace: true استخدم.\r\n      // عندما تريد إضافة الصفحة الجديدة إلى السجل وتمكين العودة للصفحة السابق replace: false استخدم \r\n     }\r\n    } else {\r\n      setIsAuthenticated(false);\r\n      setRole(null);\r\n      setSupplierProduct(null);\r\n      // إذا لم يتم تسجيل الدخول، نقوم بتوجيه المستخدم إلى صفحة تسجيل الدخول\r\n      if (!['/supplier-login', '/company-login', '/admin', '/supplier-registration', '/company-registration'].includes(location.pathname)) {\r\n        navigate('/supplier-login', { replace: false }); // تحويل المستخدم إلى صفحة تسجيل الدخول الخاصة بـ supplier\r\n      }\r\n    }\r\n  }, [location, navigate, setIsAuthenticated, setRole, setSupplierProduct]);\r\n\r\n  return null; // هذا المكون لا يعرض شيئًا\r\n}\r\n\r\nexport default RefrshHandler;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,SAASC,aAAaA,CAAC;EAAEC,kBAAkB;EAAEC,OAAO;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EAC1E,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,MAAME,eAAe,GAAGH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAE/D,IAAIF,KAAK,IAAIG,IAAI,IAAIC,eAAe,EAAE;MAAA,IAAAC,kBAAA,EAAAC,qBAAA,EAAAC,mBAAA;MACpCb,kBAAkB,CAAC,IAAI,CAAC;MACxBC,OAAO,CAACQ,IAAI,CAAC;MACb,IAAIA,IAAI,KAAK,UAAU,IAAIC,eAAe,EAAE;QAC1CR,kBAAkB,CAACQ,eAAe,CAAC;MACrC;;MAGA;MACA,MAAMI,YAAY,GAAG;QACnBC,QAAQ,EAAE;UAACC,MAAM,EAAE,CAAC,cAAc,CAAC;UAACC,OAAO,EAAC,CAAC,eAAe;QAAC,CAAC;QAC9DC,OAAO,EAAE,CAAC,eAAe,CAAC;QAC1BC,KAAK,EAAE,CAAC,aAAa;MACvB,CAAC;;MAED;MACA,IAAI,GAAAR,kBAAA,GAACG,YAAY,CAACL,IAAI,CAAC,cAAAE,kBAAA,gBAAAC,qBAAA,GAAlBD,kBAAA,CAAqBD,eAAe,CAAC,cAAAE,qBAAA,eAArCA,qBAAA,CAAuCQ,QAAQ,CAAChB,QAAQ,CAACiB,QAAQ,CAAC,KAAI,GAAAR,mBAAA,GAACC,YAAY,CAACL,IAAI,CAAC,cAAAI,mBAAA,eAAlBA,mBAAA,CAAoBO,QAAQ,CAAChB,QAAQ,CAACiB,QAAQ,CAAC,GAAE;QAC3H,IAAIZ,IAAI,KAAK,UAAU,EAAE;UACvBJ,QAAQ,CAAC,IAAII,IAAI,IAAIC,eAAe,OAAO,EAAE;YAAEY,OAAO,EAAE;UAAK,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC,MAAM;UACLjB,QAAQ,CAAC,IAAII,IAAI,OAAO,EAAE;YAAEa,OAAO,EAAE;UAAK,CAAC,CAAC,CAAC,CAAC;QAChD;QACF;QACA;MACD;IACD,CAAC,MAAM;MACLtB,kBAAkB,CAAC,KAAK,CAAC;MACzBC,OAAO,CAAC,IAAI,CAAC;MACbC,kBAAkB,CAAC,IAAI,CAAC;MACxB;MACA,IAAI,CAAC,CAAC,iBAAiB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,wBAAwB,EAAE,uBAAuB,CAAC,CAACkB,QAAQ,CAAChB,QAAQ,CAACiB,QAAQ,CAAC,EAAE;QACnIhB,QAAQ,CAAC,iBAAiB,EAAE;UAAEiB,OAAO,EAAE;QAAM,CAAC,CAAC,CAAC,CAAC;MACnD;IACF;EACF,CAAC,EAAE,CAAClB,QAAQ,EAAEC,QAAQ,EAAEL,kBAAkB,EAAEC,OAAO,EAAEC,kBAAkB,CAAC,CAAC;EAEzE,OAAO,IAAI,CAAC,CAAC;AACf;AAACC,EAAA,CA9CQJ,aAAa;EAAA,QACHF,WAAW,EACXC,WAAW;AAAA;AAAAyB,EAAA,GAFrBxB,aAAa;AAgDtB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}